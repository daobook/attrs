# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2015, Hynek Schlawack
# This file is distributed under the same license as the attrs package.
# xinetzone <xinzone@outlook.com>, 2023.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: attrs 22.2\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2023-01-10 12:37+0800\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.6.0\n"

#: ../../comparison.md:1
msgid "Comparison"
msgstr "比较"

#: ../../comparison.md:3
msgid ""
"By default, two instances of *attrs* classes are equal if all their "
"fields are equal. For that, *attrs* writes `__eq__` and `__ne__` methods "
"for you."
msgstr ""
"默认情况下，如果 *attrs* 类的所有字段都相等，则它们的两个实例是相等的。"
"为此，*attrs* 为你编写 `__eq__` 和 `__ne__` 方法。"

#: ../../comparison.md:6
msgid ""
"Additionally, if you pass `order=True`[^default], *attrs* will also "
"create a full set of ordering methods that are based on the defined "
"fields: `__le__`, `__lt__`, `__ge__`, and `__gt__`."
msgstr ""
#  "此外，如果传递 `order=True` [^default] ， *attrs* 还将创建一套完整的基于已定义字段的排序方法：`__le__`， `__lt__`， `__ge__` 和 `__gt__`。"

#: ../../comparison.md:12
msgid "Customization"
msgstr "自定义"

#: ../../comparison.md:14
msgid ""
"As with other features, you can exclude fields from being involved in "
"comparison operations:"
msgstr ""
"和其他特性一样，你可以在比较操作中排除 fields："

#: ../../comparison.md:27
msgid ""
"Additionally you can also pass a *callable* instead of a bool to both "
"*eq* and *order*. It is then used as a key function like you may know "
"from {func}`sorted`:"
msgstr ""
"此外，你还可以向 *eq* 和 *order* 传递可调用对象而不是 bool 类型。然后它被用作 key 函数，就像你可能知道的 {func}`sorted`："

#: ../../comparison.md:46
msgid ""
"This is especially useful when you have fields with objects that have "
"atypical comparison properties. Common examples of such objects are "
"[*NumPy* arrays](https://github.com/python-attrs/attrs/issues/435)."
msgstr ""
"这在具有具有非典型比较属性的对象的字段时特别有用。这种对象的常见示例是 [NumPy 数组](https://github.com/python-attrs/attrs/issues/435)。"

#: ../../comparison.md:49
msgid ""
"To save you unnecessary boilerplate, *attrs* comes with the "
"{func}`attrs.cmp_using` helper to create such functions. For *NumPy* "
"arrays it would look like this:"
msgstr ""
"为了节省不必要的样板文件， *attrs* 附带了 {func}`attrs.cmp_using` 辅助来创建这样的函数。对于 NumPy 数组，它看起来像这样："

#: ../../comparison.md:61
msgid ""
"Please note that *eq* and *order* are set *independently*, because "
"*order* is `False` by default in {func}`~attrs.define` (but not in "
"{func}`attr.s`). You can set both at once by using the *cmp* argument "
"that we've undeprecated just for this use-case."
msgstr ""
"请注意 *eq* 和 *order* 是独立设置的，因为 *order* 在 {func}`~attrs.define` 中默认为 `False`(但在 {func}`attr.s` 中不是)。"
"您可以通过使用 *cmp* 参数同时设置这两个参数，我们仅在此用例中不反对使用该参数。"

#: ../../comparison.md:8
msgid ""
"That's the default if you use the {func}`attr.s` decorator, but not with "
"{func}`~attrs.define`."
msgstr ""
"如果使用 {func}`attr.s` 装饰器，而不是使用 {func}`~attrs.define`，这是默认值。"
